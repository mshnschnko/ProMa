digraph S {
    start [label=S shape=plaintext]
    alg [label=ALG shape=box]

    statement [label=STATEMENT shape=box]

    algorithm [label=algorithm shape=oval]
    alg_br_open [label="(" shape=oval]
    alg_br_close [label=")" shape=oval]
    alg_name [label=ALG_NAME shape=box]
    alg_comma_1 [label="," shape=oval]
    alg_comma_2 [label="," shape=oval]
    alg_comma_3 [label="," shape=oval]
    alg_comma_4 [label="," shape=oval]
    input [label=INPUT shape=box]
    alg_output [label=ALG_OUTPUT shape=box]
    out_statement [label=STATEMENT shape=box]

    cb_open [label="(" shape=oval]
    cb_close [label=")" shape=oval]
    code_block [label=CODE_BLOCK shape=box]
    output [label=OUTPUT shape=box]

    return_type [label=ALG_UNIT_RETURN shape=box]
    return [label=RETURN shape=box]
    
    return_command [label="return" shape=oval]
    return_command_statement [label=STATEMENT shape=box]

    yield [label=YIELD shape=box]

    yield_command [label="yield" shape=oval]
    yield_command_statement [label=STATEMENT shape=box]

    input_br_open [label="(" shape=oval]
    input_br_close [label=")" shape=oval]
    param_list [label=PARAM_LIST shape=box]

    param_list_statement [label=STATEMENT shape=box]
    param_list_comma [label="," shape=oval]

    fragment [label=FRAGMENT shape=box]
    end [label="" shape=point]

    alg_unit [label=ALG_UNIT shape=box]

    proc [label=proc shape=oval]
    func [label=func shape=oval]
    iter [label=iter shape=oval]
    alg_unit_br_open [label="(" shape=oval]
    alg_unit_br_close [label=")" shape=oval]
    alg_unit_name [label=NAME shape=box]
    alg_unit_name_statement [label=STATEMENT shape=box]
    alg_unit_comma_1 [label="," shape=oval]
    alg_unit_comma_2 [label="," shape=oval]
    alg_unit_input [label=INPUT shape=box]

    input_br_open_2 [label="(" shape=oval]
    input_br_close_2 [label=")" shape=oval]
    param_list_2 [label=PARAM_LIST shape=box]

    param_list_statement_2 [label=STATEMENT shape=box]
    param_list_comma_2 [label="," shape=oval]

    alg_unit_operator [label=OPERATOR shape=box]

    operator [label=OPERATOR shape=box]
    code_block_comma [label="," shape=oval]






    start -> alg
    start -> fragment
    fragment -> code_block

    alg -> algorithm
    algorithm -> alg_br_open
    alg_br_open -> alg_name
    alg_name -> statement
    statement -> alg_comma_1
    alg_comma_1 -> input

    input -> input_br_open
    input_br_open -> param_list
    input_br_close -> alg_comma_2

    param_list -> param_list_statement
    param_list_statement -> param_list_comma
    param_list_comma -> param_list_statement
    param_list_statement -> input_br_close
    param_list -> input_br_close

    alg_comma_2 -> alg_output
    alg_output -> out_statement
    out_statement -> alg_comma_3

    alg_comma_3 -> cb_open
    cb_open -> code_block
    code_block -> alg_unit
    cb_close -> alg_comma_4

    code_block -> operator
    code_block_comma -> alg_unit
    code_block_comma -> operator
    operator -> code_block_comma
    
    alg_unit -> func
    alg_unit -> proc
    alg_unit -> iter
    func -> alg_unit_br_open
    proc -> alg_unit_br_open
    iter -> alg_unit_br_open
    alg_unit_br_open -> alg_unit_name
    alg_unit_name -> alg_unit_name_statement
    alg_unit_name_statement -> alg_unit_comma_1
    alg_unit_comma_1 -> alg_unit_input
    alg_unit_input -> input_br_open_2
    
    input_br_open_2 -> param_list_2
    param_list_2 -> param_list_statement_2
    param_list_statement_2 -> param_list_comma_2
    param_list_comma_2 -> param_list_statement_2
    param_list_statement_2 -> input_br_close_2
    param_list_2 -> input_br_close_2

    input_br_close_2 -> alg_unit_comma_2
    alg_unit_comma_2 -> alg_unit_operator
    alg_unit_operator -> alg_unit_comma_2
    alg_unit_operator -> alg_unit_br_close
    alg_unit_br_close -> code_block_comma
    alg_unit_br_close -> cb_close

    operator -> cb_close
    cb_close -> alg_comma_4

    alg_comma_4 -> output

    output -> return_type
    return_type -> return
    return_type -> yield

    return -> return_command
    return_command -> return_command_statement
    return_command_statement -> alg_br_close
    
    yield -> yield_command
    yield_command -> yield_command_statement
    yield_command_statement -> alg_br_close

    alg_br_close -> end
}
